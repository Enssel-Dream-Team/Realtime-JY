services:
  mongo:
    image: mongo:7.0
    container_name: collector-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: news
    volumes:
      - collector-mongo-data:/data/db
    networks:
      - collector-net

  redis:
    image: redis:7.4-alpine
    container_name: collector-redis
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning
    ports:
      - "6379:6379"
    volumes:
      - collector-redis-data:/data
    networks:
      - collector-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: collector-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - collector-net

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: collector-kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    networks:
      - collector-net

  kafka-init:
    image: confluentinc/cp-kafka:7.6.1
    container_name: collector-kafka-init
    depends_on:
      - kafka
    command: ["/bin/sh", "-c", "echo 'Waiting for Kafka to be ready...' && cub kafka-ready -b kafka:9092 1 20 && kafka-topics --create --if-not-exists --topic ingest.raw.doc.v1 --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1"]
    networks:
      - collector-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: collector-kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - "8089:8080"
    networks:
      - collector-net

volumes:
  collector-mongo-data:
    name: collector-mongo-data
  collector-redis-data:
    name: collector-redis-data

networks:
  collector-net:
    driver: bridge
